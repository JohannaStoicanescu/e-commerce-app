name: Canary Operations

on:
  workflow_dispatch:
    inputs:
      operation:
        description: "Operation to perform"
        required: true
        type: choice
        options:
          - promote
          - rollback
          - adjust-traffic
      traffic_percentage:
        description: "Traffic percentage (for adjust-traffic operation)"
        required: false
        default: "10"
        type: string

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  promote-canary:
    name: Promote Canary to Stable
    runs-on: ubuntu-latest
    if: github.event.inputs.operation == 'promote'
    environment:
      name: production
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download latest canary build
        run: |
          # Get the latest canary deployment info
          CANARY_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/canary/"

          # Create directories
          mkdir -p stable-build canary-backup

          # Backup current stable (if exists)
          if curl -f -s -o /dev/null "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"; then
            echo "Backing up current stable deployment..."
            # We'll backup what we can, but GitHub Pages doesn't allow direct download
            # In a real scenario, you'd store builds in artifacts or external storage
          fi

          # For now, we'll rebuild from the dev branch since we can't directly download from GitHub Pages
          echo "Rebuilding canary as stable..."

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Flutter Web (promote to stable)
        run: |
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          BASE_HREF="/${REPO_NAME}/"
          flutter build web --release --base-href "$BASE_HREF" --dart-define=ENVIRONMENT=production

      - name: Prepare stable build
        run: |
          mkdir -p stable-deploy
          cp -r build/web/* stable-deploy/
          cp build/web/index.html stable-deploy/404.html
          touch stable-deploy/.nojekyll

          # Remove canary traffic routing for stable
          rm -f stable-deploy/traffic-router.js

          # Update deployment info
          cat > stable-deploy/deployment-info.json << EOF
          {
            "stable": {
              "promoted_from_canary": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "commit": "${GITHUB_SHA}",
              "promoted_by": "${{ github.actor }}"
            }
          }
          EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: stable-deploy/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create release tag
        run: |
          VERSION=$(date +%Y%m%d-%H%M%S)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${VERSION}" -m "Promoted canary to stable - ${VERSION}"
          git push origin "v${VERSION}"

      - name: Notify promotion success
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;

            await github.rest.issues.create({
              owner,
              repo,
              title: `🚀 Canary Promoted to Stable - ${new Date().toISOString().split('T')[0]}`,
              body: `**Canary has been successfully promoted to stable!**
              
              - **Promoted at**: ${new Date().toISOString()}
              - **Promoted by**: @${{ github.actor }}
              - **Commit**: \`${context.sha}\`
              - **Production URL**: https://${owner}.github.io/${repo}/
              
              The canary deployment has been promoted to the stable production environment.
              All traffic is now routed to the new stable version.`,
              labels: ['deployment', 'promotion']
            });

  rollback-canary:
    name: Rollback Canary
    runs-on: ubuntu-latest
    if: github.event.inputs.operation == 'rollback'

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Rebuild stable version
        run: |
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          BASE_HREF="/${REPO_NAME}/"
          flutter build web --release --base-href "$BASE_HREF" --dart-define=ENVIRONMENT=production

      - name: Prepare rollback build
        run: |
          mkdir -p rollback-deploy
          cp -r build/web/* rollback-deploy/
          cp build/web/index.html rollback-deploy/404.html
          touch rollback-deploy/.nojekyll

          # Remove canary routing and indicator
          rm -f rollback-deploy/traffic-router.js

          # Update deployment info
          cat > rollback-deploy/deployment-info.json << EOF
          {
            "stable": {
              "rollback_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "rollback_by": "${{ github.actor }}",
              "commit": "${GITHUB_SHA}"
            }
          }
          EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: rollback-deploy/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;

            await github.rest.issues.create({
              owner,
              repo,
              title: `⏪ Canary Rollback - ${new Date().toISOString().split('T')[0]}`,
              body: `**Canary deployment has been rolled back!**
              
              - **Rolled back at**: ${new Date().toISOString()}
              - **Rolled back by**: @${{ github.actor }}
              - **Reverted to**: main branch stable version
              - **Production URL**: https://${owner}.github.io/${repo}/
              
              The system has been reverted to the last known stable version.
              Please investigate the issues that caused the rollback.`,
              labels: ['deployment', 'rollback', 'incident']
            });

  adjust-traffic:
    name: Adjust Canary Traffic
    runs-on: ubuntu-latest
    if: github.event.inputs.operation == 'adjust-traffic'
    environment:
      name: canary

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate traffic percentage
        run: |
          TRAFFIC=${{ github.event.inputs.traffic_percentage }}
          if ! [[ "$TRAFFIC" =~ ^[0-9]+$ ]] || [ "$TRAFFIC" -lt 0 ] || [ "$TRAFFIC" -gt 100 ]; then
            echo "Error: Traffic percentage must be between 0 and 100"
            exit 1
          fi
          echo "Traffic percentage validated: ${TRAFFIC}%"

      - name: Trigger canary redeploy with new traffic
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const trafficPercentage = "${{ github.event.inputs.traffic_percentage }}";

            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'canary-deploy.yml',
              ref: 'dev',
              inputs: {
                traffic_percentage: trafficPercentage
              }
            });

            // Create an issue to track the traffic adjustment
            await github.rest.issues.create({
              owner,
              repo,
              title: `📊 Canary Traffic Adjusted to ${trafficPercentage}%`,
              body: `**Canary traffic has been adjusted!**
              
              - **New traffic percentage**: ${trafficPercentage}%
              - **Adjusted at**: ${new Date().toISOString()}
              - **Adjusted by**: @${{ github.actor }}
              - **Canary URL**: https://${owner}.github.io/${repo}/canary/
              
              The canary deployment will be redeployed with the new traffic routing configuration.`,
              labels: ['deployment', 'traffic-adjustment']
            });
